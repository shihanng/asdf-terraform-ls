#!/usr/bin/env bash

set -e
set -o pipefail

get_arch() {
	local arch=""

	case "$(uname -m)" in
		x86_64 | amd64) arch="amd64" ;;
		i686 | i386) arch="386" ;;
		aarch64 | arm64) arch="arm64" ;;
		*)
			echo "unsupported architecture '$(uname -m)'" 1>&2
			exit 1
			;;
	esac

	echo -n $arch
}

get_platform() {
	local platform=""

	case $(uname | tr '[:upper:]' '[:lower:]') in
		linux*)
			local platform=linux
			;;
		darwin*)
			local platform=darwin
			;;
		ms*)
			local platform=windows
			;;
		*)
			echo "unsupported platform" 1>&2
			exit 1
			;;
	esac

	echo -n $platform
}

get_download_url() {
	local version=$1
	local platform=""
	local arch=""

	platform=$(get_platform)
	arch=$(get_arch)

	echo -n "https://releases.hashicorp.com/terraform-ls/${version}/terraform-ls_${version}_${platform}_${arch}.zip"
}

download_zip() {
	local download_version=$1
	local download_path=$2
	local download_as="terraform-ls.zip"
	local download_url=""

	download_url=$(get_download_url "${download_version}")
	echo "downloading ${download_url}..."

	cd "${download_path}"
	curl -sL -o "$download_as" "$download_url" || exit 1
	unzip -qq "${download_as}" && rm "${download_as}" || exit 1
	exit 0
}

if [ "$ASDF_INSTALL_TYPE" != "version" ]; then
	echo "ref install type is not supported, use version, e.g. 0.17.0." 1>&2
	exit 1
fi

download_zip "${ASDF_INSTALL_VERSION}" "${ASDF_DOWNLOAD_PATH}"
